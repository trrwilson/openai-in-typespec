// <auto-generated/>

using System;
using System.ComponentModel;

namespace OpenAI.Official.Internal.Models
{
    /// <summary> Enum for status in RunObject. </summary>
    public readonly partial struct RunObjectStatus : IEquatable<RunObjectStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RunObjectStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RunObjectStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string QueuedValue = "queued";
        private const string InProgressValue = "in_progress";
        private const string RequiresActionValue = "requires_action";
        private const string CancellingValue = "cancelling";
        private const string CancelledValue = "cancelled";
        private const string FailedValue = "failed";
        private const string CompletedValue = "completed";
        private const string ExpiredValue = "expired";

        /// <summary> queued. </summary>
        public static RunObjectStatus Queued { get; } = new RunObjectStatus(QueuedValue);
        /// <summary> in_progress. </summary>
        public static RunObjectStatus InProgress { get; } = new RunObjectStatus(InProgressValue);
        /// <summary> requires_action. </summary>
        public static RunObjectStatus RequiresAction { get; } = new RunObjectStatus(RequiresActionValue);
        /// <summary> cancelling. </summary>
        public static RunObjectStatus Cancelling { get; } = new RunObjectStatus(CancellingValue);
        /// <summary> cancelled. </summary>
        public static RunObjectStatus Cancelled { get; } = new RunObjectStatus(CancelledValue);
        /// <summary> failed. </summary>
        public static RunObjectStatus Failed { get; } = new RunObjectStatus(FailedValue);
        /// <summary> completed. </summary>
        public static RunObjectStatus Completed { get; } = new RunObjectStatus(CompletedValue);
        /// <summary> expired. </summary>
        public static RunObjectStatus Expired { get; } = new RunObjectStatus(ExpiredValue);
        /// <summary> Determines if two <see cref="RunObjectStatus"/> values are the same. </summary>
        public static bool operator ==(RunObjectStatus left, RunObjectStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RunObjectStatus"/> values are not the same. </summary>
        public static bool operator !=(RunObjectStatus left, RunObjectStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RunObjectStatus"/>. </summary>
        public static implicit operator RunObjectStatus(string value) => new RunObjectStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RunObjectStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RunObjectStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}

