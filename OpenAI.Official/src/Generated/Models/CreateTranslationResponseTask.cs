// <auto-generated/>

using System;
using System.ComponentModel;

namespace OpenAI.Internal.Models
{
    /// <summary> The CreateTranslationResponse_task. </summary>
    public readonly partial struct CreateTranslationResponseTask : IEquatable<CreateTranslationResponseTask>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CreateTranslationResponseTask"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CreateTranslationResponseTask(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string TranslateValue = "translate";

        /// <summary> translate. </summary>
        public static CreateTranslationResponseTask Translate { get; } = new CreateTranslationResponseTask(TranslateValue);
        /// <summary> Determines if two <see cref="CreateTranslationResponseTask"/> values are the same. </summary>
        public static bool operator ==(CreateTranslationResponseTask left, CreateTranslationResponseTask right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CreateTranslationResponseTask"/> values are not the same. </summary>
        public static bool operator !=(CreateTranslationResponseTask left, CreateTranslationResponseTask right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CreateTranslationResponseTask"/>. </summary>
        public static implicit operator CreateTranslationResponseTask(string value) => new CreateTranslationResponseTask(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CreateTranslationResponseTask other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CreateTranslationResponseTask other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}

